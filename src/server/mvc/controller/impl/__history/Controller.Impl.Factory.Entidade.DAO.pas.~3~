unit Controller.Impl.Factory.Entidade.DAO;

interface

uses
  Model.DAO.Entidade.Factory.Interfaces,
  Controller.Factory.Entidade.DAO.Interfaces;


type
  TControllerDAOEntidadeFactory = class(TInterfacedObject, iControllerFactoryEntidadeDAO)
    private
      FDAOFactory : iDAOFactory;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iControllerFactoryEntidadeDAO;

       function Entidade: iFactoryEntidade;
  end;

implementation

{ TClassePadrao }

constructor TControllerDAOEntidadeFactory.Create;
begin
  //
end;

destructor TControllerDAOEntidadeFactory.Destroy;
begin
  //
  inherited;
end;

class function TControllerDAOEntidadeFactory.New: iControllerFactoryEntidadeDAO;
begin
  Result := Self.Create;
end;

function TControllerDAOEntidadeFactory.EntidadeFactoryDAO: iDAOFactory;
begin
  if not Assigned(FDAOFactory) then
    FDAOFactory := TFactoryEntidadeDAO.New;

  Result := FDAOFactory;
end;

end.
