unit Controller.Impl.DAO.Entidade.Factory;

interface

uses
  Controller.DAO.Entidade.Factory.Interfaces,
  Model.DAO.Entidade.Factory.Interfaces, Model.DAO.Factory;


type
  TControllerEntidadeFactory = class(TInterfacedObject, iControllerDAOEntidadeFactory)
    private
      FDAOFactory : iDAOFactory;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iControllerDAOEntidadeFactory;

      function EntidadeDAOFactory : iDAOFactory;
  end;

implementation

{ TClassePadrao }

constructor TControllerEntidadeFactory.Create;
begin
  //
end;

destructor TControllerEntidadeFactory.Destroy;
begin
  //
  inherited;
end;

class function TControllerEntidadeFactory.New: iControllerDAOEntidadeFactory;
begin
  Result := Self.Create;
end;

function TControllerEntidadeFactory.EntidadeDAOFactory: iDAOFactory;
begin
  if not Assigned(FDAOFactory) then
    FDAOFactory := TFactoryDAO.New;

  Result := FDAOFactory;
end;

end.
