unit Model.Conexao.Impl.Query.Firedac;

interface

uses
  Data.DB,

  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Param,
  FireDAC.Stan.Error,
  FireDAC.DatS,
  FireDAC.Phys.Intf,
  FireDAC.DApt.Intf,
  FireDAC.Stan.Async,
  FireDAC.DApt,
  FireDAC.Comp.DataSet,
  FireDAC.Comp.Client,
  FireDAC.Phys.MySQLDef,
  FireDAC.UI.Intf,
  FireDAC.VCLUI.Wait,
  FireDAC.Comp.UI,
  FireDAC.Phys,
  FireDAC.Phys.MySQL,

  Model.Conexao.Query.Firedac.Interfaces;

type
  TQueryFiredac = class(TInterfacedObject, iQueryFiredac)
    private
      FVariavel : iQueryFiredac;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iQueryFiredac;
  end;

implementation

{ TClassePadrao }

constructor TQueryFiredac.Create;
begin
  //
end;

destructor TQueryFiredac.Destroy;
begin
  //
  inherited;
end;

class function TQueryFiredac.New: iQueryFiredac;
begin
  Result := Self.Create;
end;

end.
