unit View.Entidade.Pessoa.DataModule;

interface

uses
  System.SysUtils,
  System.Classes,
  System.JSON,

  Controller.Factory.Entidade.DAO.Interfaces,
  Controller.Impl.Factory.Entidade.DAO, Uteis.Uteis;


{$METHODINFO ON}

type
  TPessoa = class(TDataModule)
    procedure DataModuleCreate(Sender: TObject);
    procedure DataModuleDestroy(Sender: TObject);
  private
    { Private declarations }
    FController : iControllerFactoryEntidadeDAO;
    FUteis : TUteis;
  public
    { Public declarations }
    function Pessoa(const Key : String) : TJsonArray;
    procedure acceptPessoa(const Key : String; jObject : TJsonObject);
    procedure updatePessoa(const Key : String; jObject : TJsonObject);
  end;

{$METHODINFO OFF}

var
  Pessoa: TPessoa;
  FUteis : TUteis;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TPessoa.DataModuleCreate(Sender: TObject);
begin
  FUteis := TUteis.Create;
  FUteis.ResultadoGet(False);
  FController := TControllerFactoryEntidadeDAO.New;
end;

procedure TPessoa.DataModuleDestroy(Sender: TObject);
begin
  FUteis.DisposeOf;
end;

function TPessoa.Pessoa(const Key: String): TJsonArray;
begin
  Result := FController
                  .DAOFactoryEntidade
                   .Entidade
                    .Pessoa
                     .Get(Key);
  FUteis.ResultadoGet(True);
end;

procedure TPessoa.acceptPessoa(const Key: String; jObject: TJsonObject);
begin
  FController
          .DAOFactoryEntidade
           .Entidade
            .Pessoa
             .Put(Key, jObject);
end;

procedure TPessoa.updatePessoa(const Key: String; jObject: TJsonObject);
begin
   FController
          .DAOFactoryEntidade
           .Entidade
            .Pessoa
             .Post(Key, jObject);
end;


end.
